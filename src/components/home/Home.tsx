import React, { useEffect, useRef, useState } from "react";
import anime from 'animejs/lib/anime.es.js';
import './Home.css';
import ThemeSwitcher, { Theme } from "../theme-switcher/ThemeSwitcher";
import Typed from "typed.js";
import { Button } from "primereact/button";
import Create from "./children/create/Create";
import GetAll from "./children/getAll/GetAll";
import GetSingle from "./children/getSingle/GetSingle";
import Delete from "./children/delete/Delete";
import Update from "./children/update/Update";

type ChildComponentName = 'create' | 'getAll' | 'getSingle' | 'delete' | 'update';

const Home = (): JSX.Element => {
    const actionButtonData: {className: string, icon: string, component: ChildComponentName}[] = [
        {className: 'item-create', icon: 'pi pi-plus', component: 'create'},
        {className: 'item-get-all', icon: 'pi pi-users', component: 'getAll'},
        {className: 'item-get-single', icon: 'pi pi-user', component: 'getSingle'},
        {className: 'item-delete', icon: 'pi pi-trash', component: 'delete'},
        {className: 'item-update', icon: 'pi pi-save', component: 'update'},
    ];
    const [theme, setTheme] = useState<Theme>();
    const [showMenu, setShowMenu] = useState<boolean>(false);
    const welcomeBackTextEl = useRef(null);
    const [childComponent, setChildComponent] = useState<ChildComponentName>(null);
    const [showSvgArrow, setShowSvgArrow] = useState<boolean>(true);

    useEffect(() => {
        const welcomeBackTyped = new Typed(welcomeBackTextEl.current, {
            strings: ['Welcome back!'],
            typeSpeed: 100,
            showCursor: false
        });

        anime({
            targets: '#arrow-down-path',
            strokeDashoffset: [anime.setDashoffset, 0],
            easing: 'linear', // cubicBezier(.5, .05, .1, .3)
            duration: 3000,
            delay: function(el, i) { return i * 500 },
            endDelay: 1000,
            loop: true
        });

        return () => {
            welcomeBackTyped.destroy();
        }
    }, []);

    const themeSwitchAdditionalHandler = (value: Theme) => {
        setTheme(value);
    };

    const getAnimeTimelineParams = (
        className: string,
        translateX: string | number,
        translateY: string | number,
        visibility: 'visible' | 'hidden'
    ): anime.AnimeAnimParams => {
        return {
            targets: className,
            translateX: translateX,
            translateY: translateY,
            begin: () => {
                const item = document.querySelector(className) as HTMLElement;
                item.style.visibility = visibility;
            }
        };
    };

    const showMenuHandler = () => {
        anime({
            targets: '.action-button',
            translateY: '6rem',
            duration: 750
        })

        setTimeout(() => {
            const timeline = anime.timeline({
                easing: 'easeOutExpo',
                duration: 200
            });
    
            timeline
                .add(getAnimeTimelineParams('.item-create', 0, '2rem', 'visible'))
                .add(getAnimeTimelineParams('.item-get-all', '4rem', '4rem', 'visible'))
                .add(getAnimeTimelineParams('.item-get-single', '-4rem', '4rem', 'visible'))
                .add(getAnimeTimelineParams('.item-delete', '4rem', 0, 'visible'))
                .add(getAnimeTimelineParams('.item-update', '-4rem', 0, 'visible'))
        }, 750);
    };

    const hideMenuHandler = () => {
        const timeline = anime.timeline({
            easing: 'easeOutExpo',
            duration: 200
        });

        timeline
            .add(getAnimeTimelineParams('.item-create', 0, '6rem', 'hidden'))
            .add(getAnimeTimelineParams('.item-get-all', 0, '6rem', 'hidden'))
            .add(getAnimeTimelineParams('.item-get-single', 0, '6rem', 'hidden'))
            .add(getAnimeTimelineParams('.item-delete', 0, '6rem', 'hidden'))
            .add(getAnimeTimelineParams('.item-update', 0, '6rem', 'hidden'))

        setTimeout(() => {
            anime({
                targets: '.action-button',
                translateY: 0,
                duration: 750
            })
        }, 200 * 5);
    };

    const toggleMenuHandler = () => {
        setShowMenu(!showMenu);
        showMenu ? hideMenuHandler() : showMenuHandler();
    };

    const actionButtonClickHandler = (component: ChildComponentName) => {
        setChildComponent(component);
    };

    const childComponentRenderer = (): JSX.Element => {
        switch (childComponent) {
            case 'create':
                return <Create />;
            case 'getAll':
                return <GetAll />;
            case 'getSingle':
                return <GetSingle />;
            case 'delete':
                return <Delete />;
            case 'update':
                return <Update />;
        }
    }

    return (
        <>
            <div             
                className={
                    theme === 'light' 
                    ? 'w-screen h-screen login-container-light' 
                    : 'w-screen h-screen login-container-dark'
                }
            >
                <div className="flex flex-column h-full">
                    <div className="fixed p-3">
                        <Button icon="pi pi-bars" rounded raised aria-label="Menu" />
                    </div>
                    <div className="fixed right-0 p-3">
                        <ThemeSwitcher themeSwitchAdditionalHandler={themeSwitchAdditionalHandler} />
                    </div>
                    <div className="flex justify-content-center h-3rem p-3">
                        <span className="welcome-back" ref={welcomeBackTextEl}></span>
                    </div>
                    <div className="flex justify-content-center">
                        <svg width="150pt" height="150pt" version="1.1" viewBox="0 0 700 450" xmlns="http://www.w3.org/2000/svg">
                            <g className="arrow-down">
                                <path id="arrow-down-path" d="m610.96 217.28c0.55859-3.3594 1.1211-6.7188 1.1211-10.078 0.55859-3.9219 1.1211-8.3984 1.1211-12.32 0-2.8008 0.55859-5.6016 0.55859-8.9609v-12.32c0-7.2812-1.6797-14.559-3.3594-21.84-1.1211-5.6016-2.8008-11.199-5.0391-16.238-1.6797-3.9219-3.3594-7.8398-5.6016-11.762-2.8008-6.1602-6.7188-11.762-10.641-16.801-2.8008-3.9219-6.1602-7.2812-9.5195-10.641-3.9219-3.9219-8.3984-7.2812-12.879-10.078-6.7188-4.4805-14-7.2812-21.281-9.5195-2.8008-1.1211-6.1602-2.2383-8.9609-2.8008-6.1602-1.6797-11.762-3.3594-17.922-4.4805-0.55859 0-1.6797 0-2.2383-0.55859-0.55859-1.6797-1.6797-3.3594-2.8008-5.6016-2.2383-3.9219-4.4805-7.8398-6.7188-11.762-2.8008-3.9219-6.1602-8.3984-10.078-11.762-3.9219-3.9219-7.8398-7.2812-12.32-10.078-8.3984-5.6016-17.922-9.5195-27.441-12.879-3.3594-1.1211-6.7188-1.6797-10.078-2.8008-5.6016-1.1211-11.199-2.2383-16.801-2.8008-10.078-1.1211-19.602-1.6797-29.68-1.1211-4.4805 0-8.3984 0.55859-12.879 1.6797-5.6016 1.1211-10.641 1.6797-15.68 3.3594-7.2812 2.2383-14 5.0391-21.281 8.3984-3.3633 1.6836-6.1641 3.3633-9.5234 4.4844-1.1211 0.55859-2.2383 1.1211-3.3594 1.6797-1.6797 1.1211-3.9219 2.2383-5.6016 3.3594-2.8008 1.6797-5.0391 3.3594-7.8398 5.0391-5.6016 3.9219-11.199 7.8398-16.238 12.32-6.7188 5.6016-12.32 11.762-17.359 19.039-2.8008 3.9219-5.6016 7.8398-7.8398 11.762-1.1211 2.2383-2.2383 5.0391-2.8008 7.8398 0 1.6797-0.55859 2.8008 0 4.4805 0 2.2383 0.55859 3.9219 1.6797 5.6016 0.55859 1.6797 2.2383 2.8008 3.9219 3.3594 1.6797 0.55859 3.3594 0 5.0391-0.55859 1.1211-0.55859 2.2383-1.1211 3.3594-1.6797 1.6797-0.55859 2.8008-2.2383 4.4805-3.3594 1.1211-1.1211 2.2383-2.8008 2.8008-3.9219 0.55859-0.55859 1.1211-1.6797 1.6797-2.8008 1.1211-1.6797 1.6797-2.8008 2.8008-4.4805 4.4805-6.1602 9.5195-11.762 15.68-16.801 3.9219-3.3594 8.3984-6.7188 12.879-9.5195 2.8008-1.6797 5.0391-3.3594 7.8398-4.4805 3.3594-2.2383 7.2812-3.9219 11.199-5.6016 2.8008-1.1211 6.1602-2.8008 8.9609-3.9219 7.8398-3.3594 16.238-5.6016 24.641-7.2812 10.641-1.6797 21.281-2.2383 31.359-1.1211 11.762 1.1211 22.961 3.3594 33.602 7.2812 6.7188 2.8008 12.879 5.6016 18.48 9.5195 3.9219 2.8008 7.2812 6.1602 10.641 10.078 0.55859 0.55859 1.1211 1.1211 1.1211 1.6797h-0.55859-6.1602c-3.3594 0-6.1602 0.55859-9.5195 1.1211-3.3594 0.55859-6.1602 1.1211-9.5195 1.6797-3.9219 0.55859-7.2812 1.1211-11.199 2.2383-2.8008 0.55859-5.6016 1.1211-8.3984 2.2383-3.9219 1.1211-7.8398 2.2383-11.199 3.3594-2.8008 0.55859-5.6016 1.6797-8.3984 2.8008-6.1602 2.2383-11.762 5.0391-17.922 7.2812-3.9219 1.6797-7.2812 3.3594-11.199 5.6016-2.2383 1.1211-5.0391 2.2383-7.2812 3.9219-2.8008 1.6797-5.0391 2.8008-7.8398 4.4805-3.3594 2.2383-6.7188 3.9219-10.078 6.1602-2.8008 1.6797-5.0391 3.3594-7.8398 5.6016-2.2383 1.6797-4.4805 3.3594-6.7188 5.0391-5.0391 3.3594-9.5195 7.2812-14 11.199-3.3594 2.8008-6.1602 6.1602-9.5195 8.9609-3.3594 3.9219-6.7188 7.8398-9.5195 12.32-5.0391 7.8398-8.9609 16.238-10.641 25.199-1.6797 10.078-1.1211 20.16 1.1211 30.238 1.1211 4.4805 2.8008 8.9609 4.4805 12.879 2.2383 4.4805 5.0391 8.3984 8.3984 12.32 6.1602 7.2812 14 13.441 22.398 17.922 8.3984 4.4805 17.359 7.8398 26.879 9.5195 5.0391 1.1211 10.078 1.6797 15.121 1.6797 4.4805 0.55859 8.9609 0.55859 14 0 4.4805 0 8.9609-1.1211 12.879-1.6797 5.0391-1.1211 10.641-2.2383 15.68-3.3594 8.9609-2.8008 17.922-6.7188 26.879-10.641 8.3984-3.9219 15.68-8.9609 22.961-14 3.9219-2.8008 7.8398-6.1602 11.762-9.5195 3.3594-2.8008 6.7188-6.1602 10.078-9.5195 6.7188-6.7188 12.32-14.559 16.801-22.961 4.4805-8.3984 7.8398-17.922 10.078-27.441 2.2383-9.5195 3.3594-19.602 3.9219-29.121 0.55859-8.9609 0-17.922-1.6797-26.32-0.55859-2.8008-1.1211-5.6016-1.6797-7.8398 1.6797 0.55859 3.3594 1.1211 5.0391 1.6797 2.8008 1.1211 6.1602 1.6797 8.9609 2.8008 5.6016 2.2383 10.641 5.0391 15.68 8.3984 3.9219 3.3594 7.8398 6.7188 11.199 10.641 3.3594 4.4805 6.7188 9.5195 9.5195 14.559 0.55859 1.1211 1.1211 2.8008 2.2383 3.9219 1.6797 3.9219 3.3594 8.3984 4.4805 12.32 1.1211 3.3594 1.6797 7.2812 2.2383 10.641 1.6797 10.641 1.1211 20.719 0 31.359-0.55859 3.9219-1.1211 7.8398-1.6797 11.762-0.55859 2.2383-0.55859 4.4805-1.1211 6.1602-0.55859 3.9219-1.6797 8.3984-3.3594 12.32-2.2383 5.6016-4.4805 11.762-7.8398 17.359-1.6797 3.3594-3.9219 6.7188-5.6016 10.078-1.1211 2.2383-2.8008 3.9219-3.9219 5.6016-1.6797 2.2383-3.3594 3.9219-4.4805 6.1602-3.9219 5.0391-8.3984 8.9609-12.879 13.441-3.3594 2.8008-7.2812 5.6016-11.199 7.8398-2.2383 1.6797-5.0391 3.3594-7.2812 4.4805-2.8008 1.6797-5.0391 3.3594-7.8398 4.4805-2.8008 1.6797-5.6016 2.8008-8.9609 4.4805-4.4805 1.6797-8.3984 3.9219-12.879 5.6016-5.6016 2.2383-11.199 3.9219-16.801 5.6016-4.4805 1.6797-9.5195 2.8008-14.559 3.9219-2.8008 0.55859-5.0391 1.1211-7.8398 1.6797-2.2383 0.55859-4.4805 1.1211-6.7188 1.1211-2.8008 0.55859-5.6016 0.55859-8.3984 1.1211-2.8008 0.55859-5.6016 0.55859-8.3984 0.55859-3.3672 2.2383-8.4062 2.2383-13.449 2.2383h-18.48c-5.0391 0-9.5195-0.55859-14.559-0.55859-5.6016-0.55859-11.199-1.6797-16.801-2.8008-3.9219-0.55859-7.8398-1.6797-11.762-2.2383-2.8008-0.55859-5.6016-1.1211-8.3984-2.2383-12.879-2.8008-25.762-6.7188-38.078-10.078-11.199-3.3594-22.961-6.1602-34.16-8.9609-6.7188-1.6797-14-3.3594-20.719-5.0391-5.6016-1.1211-11.762-2.2383-17.922-3.3594-1.1211 0-2.2383-0.55859-3.3594-0.55859-2.2383-0.55859-4.4805-0.55859-7.2812-1.1211-6.7188-1.1211-13.441-1.1211-20.16-1.6797-19.039 0-38.641 4.4805-54.879 15.121-7.8398 5.0391-15.121 11.762-20.719 19.039-5.0391 6.7188-9.5195 13.441-13.441 21.281-1.6797 3.3594-2.8008 6.7188-4.4805 10.078-1.1211 2.8008-2.2383 6.1602-3.9219 8.9609-1.6797 3.9219-2.8008 7.8398-3.9219 11.762-2.2344 8.3906-3.3555 16.793-3.9141 25.191-0.55859 9.5195 1.1211 19.039 3.3594 28 1.1211 3.9219 2.2383 7.8398 3.3594 11.762 1.1211 2.8008 2.2383 5.6016 2.8008 8.3984 0.55859 1.1211 1.1211 2.2383 1.6797 3.3594 1.1211 2.2383 2.2383 5.0391 3.3594 7.2812 1.1211 2.8008 2.2383 5.0391 3.9219 7.8398-0.003906 0-0.003906 0.55859-0.003906 0.55859-5.6016 3.9219-11.762 8.3984-17.359 12.32-5.6016 3.9219-10.641 8.3984-15.68 13.441-3.3594 3.3594-8.3984 7.2812-9.5195 12.32v0.55859c0.55859 1.6797 1.1211 2.8008 1.6797 4.4805 0 0.55859 0.55859 1.1211 0.55859 1.6797 1.1211 0 1.6836 0.55859 2.2422 1.1211 0.55859 0.55859 1.6797 1.6797 2.2383 2.2383 1.6797 1.1211 3.9219 1.6797 5.6016 2.8008 3.3594 1.6797 7.2812 2.8008 10.641 4.4805s7.2812 3.3594 10.641 4.4805c0.55859 0 0.55859 0.55859 1.1211 0.55859 1.1211 0.55859 2.2383 1.1211 3.3594 1.1211 0.55859 0 1.1211 0.55859 1.6797 0.55859h0.55859c1.6797 0.55859 2.8008 1.1211 4.4805 1.6797 3.3594 1.1211 6.7188 2.8008 10.078 3.9219 3.3594 1.1211 6.7188 2.8008 10.078 3.9219 0.55859 0 1.1211 0.55859 1.6797 0.55859 3.3594 1.1211 7.2812 2.8008 10.641 3.9219 1.6797 0.55859 3.9219 1.1211 6.1602 1.6797 3.9219 1.1211 7.2812 2.2383 11.199 2.8008 0.55859 0 1.1211 0 1.6797 0.55859h1.1211 1.1211c0.55859 0 1.1211 0 2.2383 0.55859h0.55859c1.6797 0.55859 2.8008 0.55859 4.4805 0.55859h3.3594 1.6797c0.55859 0 1.1211 0 1.6797-0.55859 1.1211 0 1.6797-0.55859 2.8008-0.55859 0 0 0.55859 0 0.55859-0.55859l2.2422-2.2422c0.55859-0.55859 0.55859-1.1211 1.1211-1.6797 0-0.55859 0.55859-1.6797 1.1211-2.2383 0.55859-2.2383 1.6797-3.9219 1.6797-6.1602 0.55859-2.8008 1.1211-5.6016 1.6797-8.3984v-0.55859-0.55859c0-2.8008 0.55859-5.6016 1.1211-8.9609v-2.8008-0.55859c0-1.6797 0-3.3594 0.55859-5.0391 0.55859-5.6016 0.55859-11.762 0.55859-17.359v-8.9609-3.9219-1.1211-3.9219-6.1602-2.2383-0.55859-2.8008-6.7188-3.9219-1.6797-1.6797-0.55859-3.3594-5.6016c0-3.9219-0.55859-7.2812-1.1211-10.641-0.55859-1.1211-0.55859-2.2383-1.1211-3.3594 0-0.55859-0.55859-1.6797-0.55859-2.2383v-0.55859c0-0.55859-0.55859-1.1211-0.55859-1.1211 0-0.55859 0-0.55859-0.55859-1.1211 0 0 0-0.55859-0.55859-0.55859 0-0.55859-0.55859-0.55859-0.55859-1.1211-0.55859 0-1.1211-0.55859-1.6797-0.55859h-0.55859-1.6797-2.2383c-1.1211 0.55859-2.2383 1.1211-2.8008 1.6797-1.1211 0.55859-2.2383 1.1211-3.3594 1.6797-1.6797 1.1211-3.3594 2.2383-5.0391 3.3594-5.0391 3.3594-10.078 7.2812-15.121 10.641-7.8398 5.6016-15.68 11.199-22.961 17.359-1.1211-2.2383-2.2383-4.4805-3.3594-6.1602-0.55859-1.6797-1.6797-3.3594-2.2383-4.4805-1.1211-2.2383-2.2383-5.0391-2.8008-7.8398-1.1211-2.2383-1.6797-4.4805-2.2383-6.7188-1.1211-4.4805-2.8008-8.3984-3.3594-12.879-1.1211-5.6016-1.1211-11.762-1.1211-17.359 0.55859-5.0391 1.6797-10.641 3.3594-15.68 0.55859-2.2383 1.6797-5.0391 2.2383-7.2812 3.9219-10.078 8.3984-20.719 14.559-29.68 3.3594-5.0391 7.2812-9.5195 11.762-13.441 3.9219-3.3594 8.3984-6.1602 13.441-8.3984 5.6016-2.2383 11.762-4.4805 17.922-5.6016 9.5195-1.6797 18.48-1.6797 28-0.55859 12.879 1.1211 26.32 4.4805 38.641 7.2812 11.762 2.8008 22.961 5.6016 34.16 8.9609 12.879 3.3594 25.762 7.2812 39.199 10.641 6.7188 1.6797 12.879 3.3594 19.602 4.4805 6.1602 1.1211 12.32 2.2383 17.922 3.3594 3.3594 0.55859 6.1602 1.1211 9.5195 1.1211 3.3594 0.55859 7.2812 1.1211 10.641 1.1211 3.3594 0 6.1602 0.55859 9.5195 0.55859 3.9219 0 7.8398 0 11.199 0.55859h17.922c6.1602 0 12.32-0.55859 17.922-1.1211 3.3594-0.55859 6.1602-0.55859 9.5195-1.1211 3.3594-0.55859 6.7188-1.1211 10.078-1.6797 7.8398-1.1211 15.121-3.3594 22.398-5.6016 2.8008-0.55859 5.6016-1.6797 8.3984-2.8008 2.8008-1.1211 5.0391-1.6797 7.8398-2.8008 2.8008-1.1211 5.6016-2.2383 8.9609-3.3594 3.9219-1.6797 8.3984-3.3594 12.32-5.6016 3.3594-1.6797 6.1602-3.3594 9.5195-5.0391 2.8008-1.1211 5.6016-2.8008 7.8398-4.4805 7.8398-4.4805 15.121-10.078 22.398-15.68 8.9609-7.2812 16.238-16.238 22.961-25.762 1.6797-2.8008 3.9219-5.6016 5.6016-8.3984 1.6797-2.8008 3.3594-5.6016 5.0391-8.9609 2.8008-5.6016 5.6016-11.762 7.8398-17.359 1.1133-5.6055 3.3516-11.766 4.4727-18.484zm-116.48-50.402c-2.8008 6.7188-6.1602 12.879-10.078 18.48-6.1602 7.8398-13.441 15.121-20.719 21.84-8.9609 7.2812-19.039 13.441-29.68 18.48-9.5195 4.4805-19.039 7.8398-29.68 9.5195-3.9219 0.55859-7.8398 1.1211-12.32 1.6797h-12.879c-3.9219-0.55859-8.3984-1.1211-12.32-2.2383-2.8008-0.55859-5.0391-1.1211-7.2812-2.2383-5.0391-2.2383-10.078-4.4805-14.559-7.8398-3.9219-2.8008-7.2812-5.6016-10.078-9.5195-1.6797-2.2383-3.3594-5.0391-5.0391-7.8398-1.1211-2.8008-2.2383-6.1602-2.8008-9.5195-0.55859-4.4805-1.1211-9.5195-0.55859-14.559 0.55859-3.3594 1.1211-6.7188 2.2383-10.641 1.6797-3.9219 3.9219-7.8398 6.1602-11.199 5.0391-6.7188 10.641-12.32 16.801-17.359 8.9609-7.2812 18.48-13.441 28.559-19.602 2.2383-1.1211 4.4805-2.8008 6.7188-3.9219 2.8008-1.6797 5.6016-2.8008 8.3984-4.4805 3.9219-2.2383 7.2812-3.9219 11.199-5.6016 3.9219-1.6797 8.3984-3.3594 12.32-5.0391 1.6797-0.55859 3.9219-1.1211 5.6016-1.6797 2.2383-1.1211 5.0391-1.6797 7.2812-2.8008 1.6797-0.55859 3.9219-1.1211 5.6016-1.6797 2.2383-0.55859 5.0391-1.1211 7.2812-2.2383 2.2383-0.55859 4.4805-1.1211 6.1602-1.1211 2.2383-0.55859 3.9219-1.1211 6.1602-1.1211 2.8008-0.55859 5.6016-1.1211 8.3984-1.1211 3.3594-0.55859 6.7188-0.55859 10.078-1.1211h5.6016 5.6016 5.0391 3.3594c1.6797 4.4805 2.8008 8.9609 3.3594 14 1.6797 10.641 2.2383 21.84 1.1211 33.039-0.007813 9.5234-1.6875 18.484-5.0469 27.441z"/>
                            </g>
                        </svg>
                    </div>
                    <div className=" flex-auto flex justify-content-center">
                        <button 
                            className="action-button toggle"
                            style={showMenu ? {'backgroundColor': '#e693a9'} : {'backgroundColor': 'var(--primary-color)'}}
                            onClick={() => toggleMenuHandler()}
                        >
                            <i className={showMenu ? 'pi pi-times' : 'pi pi-arrows-alt'}></i>
                        </button>
                        {actionButtonData.map(({className, icon, component}) => {
                            return ( 
                                <button onClick={() => actionButtonClickHandler(component)} key={className} className={`action-button ${className}`}>
                                    <i className={icon}></i>
                                </button>
                            );
                        })}
                    </div>
                    <div className="flex-auto">
                        {childComponentRenderer()}
                    </div>
                </div>
            </div>
        </>
    );
};

export default Home;